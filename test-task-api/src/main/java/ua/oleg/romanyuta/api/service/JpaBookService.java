package ua.oleg.romanyuta.api.service;


import com.google.common.collect.Lists;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import ua.oleg.romanyuta.api.exception.BadRequestException;
import ua.oleg.romanyuta.api.exception.NotFoundException;
import ua.oleg.romanyuta.dao.BookRepository;
import ua.oleg.romanyuta.domain.Book;

import java.util.List;

@Service
public class JpaBookService implements BookService {

    private BookRepository bookRepository;

    @Autowired
    public JpaBookService(BookRepository bookRepository) {
        this.bookRepository = bookRepository;
    }

    @Override
    public Book getBook(Long id) {
        Book book = bookRepository.findOne(id);
        if (book == null) {
            throw new NotFoundException(String.format("Book with id %s does not exist", id));
        }

        return book;
    }

    @Override
    public List<Book> getAllBooks() {
        return Lists.newArrayList(bookRepository.findAll());
    }

    @Override
    public Book createBook(Book book) {
        if (book.getId() != null) {
            throw new BadRequestException("Unable to create new Book, id is autogenerated");
        }
        bookRepository.save(book);
        return book;
    }

    @Override
    public Book updateBook(Book book) {
        Long id = book.getId();
        if (id == null) {
            throw new BadRequestException("Unable to update, id must be provided");
        }
        Book bookFromDb = bookRepository.findOne(id);
        if (bookFromDb == null) {
            throw new NotFoundException(String.format("Book with id %s does not exist", id));
        }

        bookRepository.save(book);

        return book;
    }
}
